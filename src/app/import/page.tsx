
// This is an autogenerated file from Firebase Studio.
'use client';

import { ArrowLeft, Upload } from 'lucide-react';
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { useToast } from '@/hooks/use-toast';
import React, { useState } from 'react';
import { useLocalStorage } from '@/hooks/use-local-storage';
import { transactions as initialTransactions } from '@/lib/data';
import { useRouter } from 'next/navigation';

export default function ImportPage() {
  const { toast } = useToast();
  const [file, setFile] = useState<File | null>(null);
  const [transactions, setTransactions] = useLocalStorage(
    'transactions',
    initialTransactions
  );
  const router = useRouter();

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (event.target.files) {
      setFile(event.target.files[0]);
    }
  };

  const handleImport = () => {
    if (!file) {
      toast({
        title: 'No File Selected',
        description: 'Please select a CSV file to import.',
        variant: 'destructive',
      });
      return;
    }

    const reader = new FileReader();
    reader.onload = (e) => {
      const text = e.target?.result;
      if (typeof text !== 'string') return;

      const rows = text.split('\n').slice(1); // Skip header row
      const newTransactions = rows
        .map((row) => {
          const columns = row.split(',');
          if (columns.length < 3) return null;

          const [date, merchant, amount, category, subcategory, notes] = columns;
          
          const parsedAmount = parseFloat(amount);
          if (isNaN(parsedAmount)) return null;


          return {
            id: `trx-${Date.now()}-${Math.random()}`,
            date: new Date(date).toISOString(),
            merchant: merchant || 'Unknown',
            amount: parsedAmount,
            category: category || 'Uncategorized',
            subcategory: subcategory || '',
            notes: notes || '',
          };
        })
        .filter(Boolean);

      if (newTransactions.length > 0) {
        // @ts-ignore
        setTransactions([...newTransactions, ...transactions]);
        toast({
          title: 'Import Successful!',
          description: `${newTransactions.length} transactions have been added.`,
        });
        router.push('/');
      } else {
        toast({
          title: 'Import Failed',
          description: 'No valid transactions found in the file.',
          variant: 'destructive',
        });
      }
    };

    reader.readAsText(file);
  };


  return (
    <div className="space-y-6">
      <div className="flex items-center gap-4">
        <Button asChild variant="ghost" size="icon">
          <Link href="/">
            <ArrowLeft />
          </Link>
        </Button>
        <h1 className="text-2xl font-bold">Import Transactions</h1>
      </div>

      <Card>
        <CardHeader>
          <CardTitle>Upload CSV File</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <p className="text-muted-foreground">
            Upload a CSV file with your transactions. The file should have the
            following columns: Date, Merchant, Amount, Category, Subcategory,
            Notes.
          </p>
          <Input type="file" accept=".csv" onChange={handleFileChange} />
          <Button onClick={handleImport} className="w-full" size="lg" disabled={!file}>
            <Upload className="mr-2 h-4 w-4" /> Import File
          </Button>
        </CardContent>
      </Card>
    </div>
  );
}
